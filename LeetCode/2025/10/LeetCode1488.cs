namespace LeetCode1488;

public class Solution
{
    public void Run()
    {
        // var param = ...;
        var result = AvoidFlood([0, 11475, 23148, 0, 91836, 0, 0, 0, 0, 18987, 0, 3057, 0, 0, 0, 69217, 0, 0, 65289, 0, 0, 0, 35467, 33617, 0, 0, 0, 0, 55602, 67935, 0, 0, 2530, 84750, 0, 0, 4411, 0, 0, 81775, 0, 46174, 33617, 0, 60322, 60801, 56836, 72787, 4022, 91465, 21256, 0, 0, 0, 0, 0, 2530, 0, 14817, 57045, 0, 0, 0, 2583, 62414, 4452, 28481, 54082, 36928, 25662, 14817, 95392, 22974, 1040, 0, 93616, 0, 0, 59731, 0, 61094, 0, 65368, 82028, 22053, 54082, 0, 0, 4452, 81775, 98696, 0, 0, 5717, 91465, 0, 0, 20971, 0, 0, 0, 0, 0, 0, 0, 8644, 82028, 55602, 0, 77965, 0, 59578, 0, 0, 0, 42529, 0, 0, 0, 0, 0, 36928, 0, 20971, 25671, 0, 0, 0, 59289, 0, 0, 0, 0, 0, 0, 59289, 72266, 0, 0, 0, 92138, 77364, 59578, 46174, 0, 2583, 60322, 0, 0, 0, 0, 0, 0, 72787, 4022, 0, 95082, 0, 0, 0, 0, 22974, 22053, 60801, 0, 67634, 27785, 0, 91836, 95392, 0, 77364, 28481, 4411, 0, 91988, 0, 0, 0, 27785, 69763, 0, 77965, 7509, 67935, 0, 62414, 18987, 84750, 0, 0, 9118, 0, 9118, 64611, 0, 0, 59731, 0, 0, 69217, 0, 65368, 0, 0, 90771, 0, 0, 56836, 8644, 0, 25662, 1040, 7509, 90771, 0, 0, 5717, 0, 0, 0, 93616, 0, 0, 92138, 91988, 0, 0, 61094, 57045, 0, 0, 0, 95082, 0, 23148, 0, 98696, 25671, 11475, 0, 35467, 21256, 65289, 68210, 69763, 0, 0, 72266, 3057, 67634, 64611, 42529, 68210]);
    }

    public int[] AvoidFlood(int[] rains)
    {
        var result = new int[rains.Length];

        var dryDays = new SortedSet<int>();
        var fulled = new Dictionary<int, int>();

        for (int i = 0; i < rains.Length; i++)
        {
            var lake = rains[i];
            if (lake == 0)
            {
                dryDays.Add(i);
                result[i] = 1;
                continue;
            }

            result[i] = -1;

            if (fulled.ContainsKey(lake))
            {
                var dry = dryDays.FirstOrDefault(d => d > fulled[lake], -1);               

                if(dry == -1)
                {
                    return Array.Empty<int>();
                }

                dryDays.Remove(dry);

                result[dry] = lake;
            }

            fulled[lake] = i;            
        }

        return result;
    }
}

